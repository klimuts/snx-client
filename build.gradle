plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.klimuts'
version = new File('src/main/resources/version').getText('UTF-8').trim()

ext {
    arch_name = "snx-client-v${version}.zip"
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = '17'
targetCompatibility = '17'

javafx {
    version = '18'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.graphics']
}

dependencies {
    implementation 'com.dorkbox:SystemTray:4.2.1'

    implementation 'io.github.classgraph:classgraph:4.8.149'
    implementation 'io.github.toolfactory:jvm-driver:9.3.0'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation "org.projectlombok:lombok:1.18.24"

    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'ch.qos.logback:logback-classic:1.4.6'

    testCompileOnly 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testCompileOnly group: 'org.assertj', name: 'assertj-core', version: '3.13.2'

    testCompileOnly 'org.testfx:testfx-core:4.0.16-alpha'
    testCompileOnly 'org.testfx:testfx-junit5:4.0.16-alpha'
}

// IDE run/debug ( ./gradlew run or ./gradlew run --debug-jvm)
applicationDefaultJvmArgs = ["--add-modules=javafx.controls,javafx.fxml",
                             "--add-exports=javafx.graphics/com.sun.glass.ui=com.klimuts.snxgui",
                             "--add-exports=javafx.graphics/com.sun.javafx.application=com.klimuts.snxgui"
]

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        noConsole = true
        name = 'snx-client'
        jvmArgs = ['--add-exports=javafx.graphics/com.sun.javafx.tk=com.klimuts.merged.module',
                   '--add-exports=javafx.graphics/com.sun.glass.ui=com.klimuts.snxgui',
                   '--add-exports=javafx.graphics/com.sun.javafx.application=com.klimuts.snxgui',
                   '-Dlogback.configurationFile=$DIR/../conf/logback.xml',
                   '-Dsnxgui.log=$DIR/../log'
        ]
    }
    addExtraDependencies("javafx")
}

compileJava {
    options.encoding = "UTF-8"
    options.incremental = true

    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.graphics/com.sun.glass.ui=com.klimuts.snxgui"
    ])

    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.graphics/com.sun.javafx.application=com.klimuts.snxgui"
    ])
}

application {
    mainModule = 'com.klimuts.snxgui'
    mainClass = 'com.klimuts.snxgui.SnxClient'
}

tasks.register('copyBin') {
    copy {
        from("$projectDir/files") {
            include "state.sh", "state"
        }
        into "$buildDir/image/bin"
    }
    copy {
        from("$projectDir/files") {
            include "snx-client.conf", "icon.png", "logback.xml"
        }
        into "$buildDir/image/conf"
    }
    copy {
        from("$projectDir/files") {
            include "install", "uninstall"
        }
        into "$buildDir/image"
    }
    copy {
        from("$projectDir/doc") {
            include "README.md"
        }
        into "$buildDir/image"
    }
    delete("$buildDir/image/release")
}

tasks.register('zipDistrImage', Zip) {
    archiveFileName = "$arch_name"
    destinationDirectory = layout.buildDirectory.dir('distribution')

    from layout.buildDirectory.dir("image")
}
